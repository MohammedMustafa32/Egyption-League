
package system_gui;


public class Admin extends javax.swing.JInternalFrame {

    String username;
    String password;
    
    League league = new League();
    
    public void add_t_n(String tname)
    {
        Team tt = new Team (tname);
        
        league.teamList.add(tt);       
    }
    
    public void add_t_p(int index,String n,String po,float h,float w)
    {
         Player pp = new Player(n, h, w, po);
        
        league.teamList.get(index).list_player.add(pp);
    }
    
    public void edit_t_n(int index_t, String tname)
    {
        league.teamList.get(index_t).setName(tname);
      
    }
    
    public void edit_t_p (int index_tt, int index_pp,String tname,String n,String po,float h,float w)
    {
       league.teamList.get(index_tt).list_player.get(index_pp).setHeight(h);
       league.teamList.get(index_tt).list_player.get(index_pp).setName(n); 
       league.teamList.get(index_tt).list_player.get(index_pp).setPosition(po);
       league.teamList.get(index_tt).list_player.get(index_pp).setWeight(w);           
    }
    
    public void remove_t(int index_tt)
    {
        league.teamList.remove(index_tt);
    }
    
    public void remove_t_p(int  index_tt,int index_pp)
    {
        league.teamList.get(index_tt).list_player.remove(index_pp);
    }
    
    public void add_m(String date, String time , int r_i ,int s_i,int t1_i,int t2_i)
    {
        Referee ref = league.refList.get(r_i);
        
        Stadium std = league.stdList.get(s_i);
        
        Team team1 = league.teamList.get(t1_i);
        
        Team team2 = league.teamList.get(t2_i);
        
        Match m =new Match (time, date, std, team1, team2, ref);
        
        league.matchList.add(m);
    }
    
    public void edit_m(int index , String date , String time , int r_i , int s_i ,int t1_i , int t2_i)
    {
        league.matchList.get(index).setDate(date);
        
        league.matchList.get(index).setTime(time);
        
        league.matchList.get(index).setRef(league.refList.get(r_i));
        
        league.matchList.get(index).setStadium(league.stdList.get(s_i));
          
        league.matchList.get(index).setTeam1(league.teamList.get(t1_i));
     
        league.matchList.get(index).setTeam2(league.teamList.get(t2_i));
    }
    
    public void remove_m(int index)
    {
        league.matchList.remove(index);
    }
    
    public void add_s(int seatc,String location,String name)
    {
        Stadium s = new Stadium(name, location, seatc);
        
        league.stdList.add(s);
    }
    
    public void edit_s(int index ,int seatc,String location,String name)
    {
        league.stdList.get(index).setSeating(seatc);
        league.stdList.get(index).setLocation(location);
        league.stdList.get(index).setName(name);
    }
    
    public void remove_s(int index )
    {
        league.stdList.remove(index);
    }
    
    public void add_r(String name , float h , float w)
    {
        Referee r = new Referee(name, h, w);
        
        league.refList.add(r);
    }
    
    
    public  void intial0_data0()
    {
        

       add_s(3000,"30/aaac street/cairo ","camp nuo" );
       
        add_s(2290,"30/ccvf street/cairo ","allianz arina" );
       
       
        add_r("eslam salem",190,72);
        add_r("hassan gad",182,78);
       
       
        
       add_t_n("Barcelona");
       add_t_n("Bayern MÃ¼nchen ");
       
       add_t_p(0,"hassan1","RW",180,70);
       add_t_p(0,"gad2","LW",179,68);
       
       
       add_t_p(1,"eslam1","LB",190,72);
       add_t_p(1,"salem2","RB",182,78);
       
       
        
        
       add_m("17:20","20/2/2021",1,2,0,1);
       
       
       
        
    }
    
    
    /**
     * Creates new form Admin
     */
    public Admin() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1002, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 566, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
